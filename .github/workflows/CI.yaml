name: Module CI & Documentation

on:
  workflow_call:
    inputs:
      module_level:
        description: Possible values are [1|2|3|4]. Indicates the module level for which this workflow should run.
        required: true
        type: number
      terraform_url:
        required: false
        type: string

env:
  TFLINT_VERSION: v0.39.3
  TFSEC_VERSION: latest
  TFC_VERSION: 1.2.7
  
jobs:
  tflint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 
      uses: actions/checkout@v3
      
    - name: TFLint - Setup
      uses: terraform-linters/setup-tflint@v2
      with:
        tflint_version: ${{ env.TFLINT_VERSION }}
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: TFLint - Version
      run: tflint --version

    - name: TFLint - Initialize
      run: tflint --init

    - name: TFLint - Run
      run: tflint -f compact
  
  tfsec:
    name: Security Checks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: TFSec
      uses: aquasecurity/tfsec-action@v1.0.0
      with:
        soft_fail: true
        version: ${{ env.TFSEC_VERSION }}
        
  checkov:
    name: Policy Checks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        quiet: false
        soft_fail: false
        framework: terraform
        output_format: sarif
        download_external_modules: false
        log_level: WARNING
        
  terraform:
    needs: [tflint, tfsec, checkov]
    name: Terraform Validation
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Terraform - Setup
      uses: hashicorp/setup-terraform@v2
      with: 
        terraform_version: ${{ env.TFC_VERSION }}
        cli_config_credentials_hostname: ${{ secrets.TFC_ADDR }}
        cli_config_credentials_token: ${{ secrets.TFC_TOKEN }}

    - name: Terraform - Init
      run: terraform init

    - name: Terraform - Validate
      run: terraform validate -no-color
      
    - name: Terraform - Speculative Plan
      if: ${{ inputs.module_level == 4 }}
      run: terraform plan

  documentation:
    if: ${{ inputs.module_level != 4 }}
    name: Documentation
    needs: [tflint, tfsec, checkov]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Render Documentation
      uses: terraform-docs/gh-actions@main
      with:
        output-method: replace
        git-push: "true"


  release:
    if: ${{ inputs.module_level != 4 }}
    name: Release
    environment:
      name: release
      url: ${{ inputs.terraform_url }}
    needs: [terraform, documentation]
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: true    
    steps:

    - name: Get Latest Release
      id: get_latest_release
      uses: gregziegan/fetch-latest-release@v2
      with:
        github_token: ${{ github.token }}    

    - name: Calculate Next Release
      shell: pwsh
      run: |
        echo @"
        body: ${{ github.event.head_commit.message }} 
        "@

        $currentTag = '${{ steps.get_latest_release.outputs.tag_name }}'
        echo "Current Tag: $currentTag"
        if (-not ($currentTag -match '\d+$')) {
          echo 'Invalid current version.'
          exit -1          
        }

        $nextVersion = [int]$Matches[2]
        $nextVersion++
        $fullVersion = "$($Matches[1])$nextVersion"
        echo "Next Tag: $fullVersion"
        echo "RELEASE_TAG=$fullVersion" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    # - name: Create New Release
    #   uses: ncipollo/release-action@v1
    #   with:
    #     name: ${{ env.RELEASE_TAG }}
    #     tag: ${{ env.RELEASE_TAG }}
    #     commit: ${{ github.event.head_commit.id }}
    #     body: ${{ github.event.head_commit.message }} 
